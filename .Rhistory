term_natural = paste0(cat_term_natural_certified, " (", round(cat_term_natural_certified_perc * 100), "%)"),
term_chemfree = paste0(cat_term_chemfree_certified, " (", round(cat_term_chemfree_certified_perc * 100), "%)"),
term_pestfree = paste0(cat_term_pestfree_certified, " (", round(cat_term_pestfree_certified_perc * 100), "%)")
) %>%
select(country, category, cat_org_count, term_organic, term_natural,
term_chemfree, term_pestfree)
# View the final combined summary table
tab6_combined_summary
traceback()
# Create new instance of dataset for Table 6
tab6_data <- data_clean
# Vector of product abbreviations
products <- c("tom", "leaf", "ban", "man", "fj", "milk", "cof", "tea", "mill", "chic", "daal", "wht", "rice", "nut")
# Vector of countries
countries <- c("Brazil", "India", "UK", "Overall")
# Define a function to create the category summary for a given dataset
create_category_summary <- function(data) {
# PRODUCT-LEVEL SUMMARY
tab6_product_summary_list <- lapply(products, function(product) {
data %>%
summarise(
org_count = sum(get(paste0(product, "_org")) == "Yes", na.rm = TRUE),
cert_count = sum(get(paste0(product, "_cert")) >= 1, na.rm = TRUE), # Certified organic products
# Organic term and certification
term_organic_count = sum(get(paste0(product, "_org_terms_Organic")) == 1, na.rm = TRUE),
term_organic_certified = sum(get(paste0(product, "_org_terms_Organic")) == 1 &
get(paste0(product, "_cert")) >= 1, na.rm = TRUE),
term_organic_certified_perc = term_organic_certified / term_organic_count,
# Natural term and certification
term_natural_count = sum(get(paste0(product, "_org_terms_Natural")) == 1, na.rm = TRUE),
term_natural_certified = sum(get(paste0(product, "_org_terms_Natural")) == 1 &
get(paste0(product, "_cert")) >= 1, na.rm = TRUE),
term_natural_certified_perc = term_natural_certified / term_natural_count,
# Chemical-free term and certification
term_chemfree_count = sum(get(paste0(product, "_org_terms_Chemical-free")) == 1, na.rm = TRUE),
term_chemfree_certified = sum(get(paste0(product, "_org_terms_Chemical-free")) == 1 &
get(paste0(product, "_cert")) >= 1, na.rm = TRUE),
term_chemfree_certified_perc = term_chemfree_certified / term_chemfree_count,
# Pesticide-free term and certification
term_pestfree_count = sum(get(paste0(product, "_org_terms_Pesticide-free")) == 1, na.rm = TRUE),
term_pestfree_certified = sum(get(paste0(product, "_org_terms_Pesticide-free")) == 1 &
get(paste0(product, "_cert")) >= 1, na.rm = TRUE),
term_pestfree_certified_perc = term_pestfree_certified / term_pestfree_count,
# Other terms can be added here following the same pattern
) %>%
mutate(
product = product,
category = case_when(product %in% c("fj", "milk", "cof", "tea") ~ "beverages",
product %in% c("tom", "leaf", "ban", "man") ~ "fresh produce",
TRUE ~ "other")
) %>%
select(category, product, everything())
})
tab6_product_summary <- bind_rows(tab6_product_summary_list)
# CATEGORY-LEVEL SUMMARY
tab6_category_summary <- tab6_product_summary %>%
group_by(category) %>%
summarise(
cat_org_count = sum(org_count, na.rm = TRUE),
cat_cert_count = sum(cert_count, na.rm = TRUE),
cat_term_organic_count = sum(term_organic_count, na.rm = TRUE),
cat_term_organic_certified = sum(term_organic_certified, na.rm = TRUE),
cat_term_organic_certified_perc = cat_term_organic_certified / cat_term_organic_count,
cat_term_natural_count = sum(term_natural_count, na.rm = TRUE),
cat_term_natural_certified = sum(term_natural_certified, na.rm = TRUE),
cat_term_natural_certified_perc = cat_term_natural_certified / cat_term_natural_count,
cat_term_chemfree_count = sum(term_chemfree_count, na.rm = TRUE),
cat_term_chemfree_certified = sum(term_chemfree_certified, na.rm = TRUE),
cat_term_chemfree_certified_perc = cat_term_chemfree_certified / cat_term_chemfree_count,
cat_term_pestfree_count = sum(term_pestfree_count, na.rm = TRUE),
cat_term_pestfree_certified = sum(term_pestfree_certified, na.rm = TRUE),
cat_term_pestfree_certified_perc = cat_term_pestfree_certified / cat_term_pestfree_count
)
# Calculate the totals across all categories
totals_row <- tab6_category_summary %>%
summarise(
category = "Total",
cat_org_count = sum(cat_org_count, na.rm = TRUE),
cat_cert_count = sum(cat_cert_count, na.rm = TRUE),
cat_term_organic_count = sum(cat_term_organic_count, na.rm = TRUE),
cat_term_organic_certified = sum(cat_term_organic_certified, na.rm = TRUE),
cat_term_organic_certified_perc = cat_term_organic_certified / cat_term_organic_count,
cat_term_natural_count = sum(cat_term_natural_count, na.rm = TRUE),
cat_term_natural_certified = sum(cat_term_natural_certified, na.rm = TRUE),
cat_term_natural_certified_perc = cat_term_natural_certified / cat_term_natural_count,
cat_term_chemfree_count = sum(cat_term_chemfree_count, na.rm = TRUE),
cat_term_chemfree_certified = sum(cat_term_chemfree_certified, na.rm = TRUE),
cat_term_chemfree_certified_perc = cat_term_chemfree_certified / cat_term_chemfree_count,
cat_term_pestfree_count = sum(cat_term_pestfree_count, na.rm = TRUE),
cat_term_pestfree_certified = sum(cat_term_pestfree_certified, na.rm = TRUE),
cat_term_pestfree_certified_perc = cat_term_pestfree_certified / cat_term_pestfree_count
)
# Append the totals row to the category summary table
tab6_category_summary <- bind_rows(tab6_category_summary, totals_row)
return(tab6_category_summary)
}
# Run the function for each country and combine results into one table
results_list <- lapply(countries, function(country) {
if (country == "Overall") {
data <- tab6_data
} else {
# Ensure filtering by country works
data <- tab6_data %>% filter(country == !!country)
}
summary_table <- create_category_summary(data)
summary_table %>%
mutate(country = country) %>%
select(country, everything())
})
# Combine all results
tab6_combined_summary <- bind_rows(results_list)
View(tab6_combined_summary)
# Mutate to combine and clean up columns
tab6_combined_summary <- tab6_combined_summary %>%
mutate(
term_organic = paste0(cat_term_organic_certified, " (", round(cat_term_organic_certified_perc * 100), "%)"),
term_natural = paste0(cat_term_natural_certified, " (", round(cat_term_natural_certified_perc * 100), "%)"),
term_chemfree = paste0(cat_term_chemfree_certified, " (", round(cat_term_chemfree_certified_perc * 100), "%)"),
term_pestfree = paste0(cat_term_pestfree_certified, " (", round(cat_term_pestfree_certified_perc * 100), "%)")
) %>%
select(country, category, cat_org_count, term_organic, term_natural,
term_chemfree, term_pestfree)
# View the final combined summary table
tab6_combined_summary
# Create new instance of dataset for Table 6
tab6_data <- data_clean
# Vector of product abbreviations
products <- c("tom", "leaf", "ban", "man", "fj", "milk", "cof", "tea", "mill", "chic", "daal", "wht", "rice", "nut")
# Vector of countries
countries <- c("Brazil", "India", "UK", "Overall")
# Define a function to create the category summary for a given dataset
create_category_summary <- function(data) {
# PRODUCT-LEVEL SUMMARY
tab6_product_summary_list <- lapply(products, function(product) {
data %>%
summarise(
org_count = sum(get(paste0(product, "_org")) == "Yes", na.rm = TRUE),
cert_count = sum(get(paste0(product, "_cert")) >= 1, na.rm = TRUE), # Certified organic products
# Organic term and certification
term_organic_count = sum(get(paste0(product, "_org_terms_Organic")) == 1, na.rm = TRUE),
term_organic_certified = sum(get(paste0(product, "_org_terms_Organic")) == 1 &
get(paste0(product, "_cert")) >= 1, na.rm = TRUE),
term_organic_certified_perc = term_organic_certified / term_organic_count,
# Natural term and certification
term_natural_count = sum(get(paste0(product, "_org_terms_Natural")) == 1, na.rm = TRUE),
term_natural_certified = sum(get(paste0(product, "_org_terms_Natural")) == 1 &
get(paste0(product, "_cert")) >= 1, na.rm = TRUE),
term_natural_certified_perc = term_natural_certified / term_natural_count,
# Chemical-free term and certification
term_chemfree_count = sum(get(paste0(product, "_org_terms_Chemical-free")) == 1, na.rm = TRUE),
term_chemfree_certified = sum(get(paste0(product, "_org_terms_Chemical-free")) == 1 &
get(paste0(product, "_cert")) >= 1, na.rm = TRUE),
term_chemfree_certified_perc = term_chemfree_certified / term_chemfree_count,
# Pesticide-free term and certification
term_pestfree_count = sum(get(paste0(product, "_org_terms_Pesticide-free")) == 1, na.rm = TRUE),
term_pestfree_certified = sum(get(paste0(product, "_org_terms_Pesticide-free")) == 1 &
get(paste0(product, "_cert")) >= 1, na.rm = TRUE),
term_pestfree_certified_perc = term_pestfree_certified / term_pestfree_count,
# Bioproducts term and certification
term_bioprod_count = sum(get(paste0(product, "_org_terms_Bioproducts")) == 1, na.rm = TRUE),
term_bioprod_certified = sum(get(paste0(product, "_org_terms_Bioproducts")) == 1 &
get(paste0(product, "_cert")) >= 1, na.rm = TRUE),
term_bioprod_certified_perc = term_bioprod_certified / term_bioprod_count,
# Bio term and certification
term_bio_count = sum(get(paste0(product, "_org_terms_Bio")) == 1, na.rm = TRUE),
term_bio_certified = sum(get(paste0(product, "_org_terms_Bio")) == 1 &
get(paste0(product, "_cert")) >= 1, na.rm = TRUE),
term_bio_certified_perc = term_bio_certified / term_bio_count,
# Eco term and certification
term_eco_count = sum(get(paste0(product, "_org_terms_Eco")) == 1, na.rm = TRUE),
term_eco_certified = sum(get(paste0(product, "_org_terms_Eco")) == 1 &
get(paste0(product, "_cert")) >= 1, na.rm = TRUE),
term_eco_certified_perc = term_eco_certified / term_eco_count,
# GMO-free term and certification
term_gmo_count = sum(get(paste0(product, "_org_terms_GMO-free")) == 1, na.rm = TRUE),
term_gmo_certified = sum(get(paste0(product, "_org_terms_GMO-free")) == 1 &
get(paste0(product, "_cert")) >= 1, na.rm = TRUE),
term_gmo_certified_perc = term_gmo_certified / term_gmo_count
) %>%
mutate(
product = product,
category = case_when(product %in% c("fj", "milk", "cof", "tea") ~ "beverages",
product %in% c("tom", "leaf", "ban", "man") ~ "fresh produce",
TRUE ~ "other")
) %>%
select(category, product, everything())
})
tab6_product_summary <- bind_rows(tab6_product_summary_list)
# CATEGORY-LEVEL SUMMARY
tab6_category_summary <- tab6_product_summary %>%
group_by(category) %>%
summarise(
cat_org_count = sum(org_count, na.rm = TRUE),
cat_cert_count = sum(cert_count, na.rm = TRUE),
cat_term_organic_count = sum(term_organic_count, na.rm = TRUE),
cat_term_organic_certified = sum(term_organic_certified, na.rm = TRUE),
cat_term_organic_certified_perc = cat_term_organic_certified / cat_term_organic_count,
cat_term_natural_count = sum(term_natural_count, na.rm = TRUE),
cat_term_natural_certified = sum(term_natural_certified, na.rm = TRUE),
cat_term_natural_certified_perc = cat_term_natural_certified / cat_term_natural_count,
cat_term_chemfree_count = sum(term_chemfree_count, na.rm = TRUE),
cat_term_chemfree_certified = sum(term_chemfree_certified, na.rm = TRUE),
cat_term_chemfree_certified_perc = cat_term_chemfree_certified / cat_term_chemfree_count,
cat_term_pestfree_count = sum(term_pestfree_count, na.rm = TRUE),
cat_term_pestfree_certified = sum(term_pestfree_certified, na.rm = TRUE),
cat_term_pestfree_certified_perc = cat_term_pestfree_certified / cat_term_pestfree_count,
cat_term_bioprod_count = sum(term_bioprod_count, na.rm = TRUE),
cat_term_bioprod_certified = sum(term_bioprod_certified, na.rm = TRUE),
cat_term_bioprod_certified_perc = cat_term_bioprod_certified / cat_term_bioprod_count,
cat_term_bio_count = sum(term_bio_count, na.rm = TRUE),
cat_term_bio_certified = sum(term_bio_certified, na.rm = TRUE),
cat_term_bio_certified_perc = cat_term_bio_certified / cat_term_bio_count,
cat_term_eco_count = sum(term_eco_count, na.rm = TRUE),
cat_term_eco_certified = sum(term_eco_certified, na.rm = TRUE),
cat_term_eco_certified_perc = cat_term_eco_certified / cat_term_eco_count,
cat_term_gmo_count = sum(term_gmo_count, na.rm = TRUE),
cat_term_gmo_certified = sum(term_gmo_certified, na.rm = TRUE),
cat_term_gmo_certified_perc = cat_term_gmo_certified / cat_term_gmo_count
)
# Calculate the totals across all categories
totals_row <- tab6_category_summary %>%
summarise(
category = "Total",
cat_org_count = sum(cat_org_count, na.rm = TRUE),
cat_cert_count = sum(cat_cert_count, na.rm = TRUE),
cat_term_organic_count = sum(cat_term_organic_count, na.rm = TRUE),
cat_term_organic_certified = sum(cat_term_organic_certified, na.rm = TRUE),
cat_term_organic_certified_perc = cat_term_organic_certified / cat_term_organic_count,
cat_term_natural_count = sum(cat_term_natural_count, na.rm = TRUE),
cat_term_natural_certified = sum(cat_term_natural_certified, na.rm = TRUE),
cat_term_natural_certified_perc = cat_term_natural_certified / cat_term_natural_count,
cat_term_chemfree_count = sum(cat_term_chemfree_count, na.rm = TRUE),
cat_term_chemfree_certified = sum(cat_term_chemfree_certified, na.rm = TRUE),
cat_term_chemfree_certified_perc = cat_term_chemfree_certified / cat_term_chemfree_count,
cat_term_pestfree_count = sum(cat_term_pestfree_count, na.rm = TRUE),
cat_term_pestfree_certified = sum(cat_term_pestfree_certified, na.rm = TRUE),
cat_term_pestfree_certified_perc = cat_term_pestfree_certified / cat_term_pestfree_count,
cat_term_bioprod_count = sum(cat_term_bioprod_count, na.rm = TRUE),
cat_term_bioprod_certified = sum(cat_term_bioprod_certified, na.rm = TRUE),
cat_term_bioprod_certified_perc = cat_term_bioprod_certified / cat_term_bioprod_count,
cat_term_bio_count = sum(cat_term_bio_count, na.rm = TRUE),
cat_term_bio_certified = sum(cat_term_bio_certified, na.rm = TRUE),
cat_term_bio_certified_perc = cat_term_bio_certified / cat_term_bio_count,
cat_term_eco_count = sum(cat_term_eco_count, na.rm = TRUE),
cat_term_eco_certified = sum(cat_term_eco_certified, na.rm = TRUE),
cat_term_eco_certified_perc = cat_term_eco_certified / cat_term_eco_count,
cat_term_gmo_count = sum(cat_term_gmo_count, na.rm = TRUE),
cat_term_gmo_certified = sum(cat_term_gmo_certified, na.rm = TRUE),
cat_term_gmo_certified_perc = cat_term_gmo_certified / cat_term_gmo_count
)
# Append the totals row to the category summary table
tab6_category_summary <- bind_rows(tab6_category_summary, totals_row)
return(tab6_category_summary)
}
# Run the function for each country and combine results into one table
results_list <- lapply(countries, function(country) {
if (country == "Overall") {
data <- tab6_data
} else {
# Ensure filtering by country works
data <- tab6_data %>% filter(country == !!country)
}
summary_table <- create_category_summary(data)
summary_table %>%
mutate(country = country) %>%
select(country, everything())
})
# Combine all results
tab6_combined_summary <- bind_rows(results_list)
# Mutate to combine and clean up columns
tab6_combined_summary <- tab6_combined_summary %>%
mutate(
term_organic = paste0(cat_term_organic_certified, " (", round(cat_term_organic_certified_perc * 100), "%)"),
term_natural = paste0(cat_term_natural_certified, " (", round(cat_term_natural_certified_perc * 100), "%)"),
term_chemfree = paste0(cat_term_chemfree_certified, " (", round(cat_term_chemfree_certified_perc * 100), "%)"),
term_pestfree = paste0(cat_term_pestfree_certified, " (", round(cat_term_pestfree_certified_perc * 100), "%)"),
term_bioprod = paste0(cat_term_bioprod_certified, " (", round(cat_term_bioprod_certified_perc * 100), "%)"),
term_bio = paste0(cat_term_bio_certified, " (", round(cat_term_bio_certified_perc * 100), "%)"),
term_eco = paste0(cat_term_eco_certified, " (", round(cat_term_eco_certified_perc * 100), "%)"),
term_gmo = paste0(cat_term_gmo_certified, " (", round(cat_term_gmo_certified_perc * 100), "%)")
) %>%
select(country, category, cat_org_count, term_organic, term_natural,
term_chemfree, term_pestfree, term_bioprod, term_bio, term_eco, term_gmo)
# View the final combined summary table
tab6_combined_summary
# Create workbook for table data
table_outputs <- createWorkbook()
saveWorkbook(table_outputs, "Outputs/table_outputs.xlsx", overwrite = TRUE)
# Create new instance of dataset for Table S5
tabS5_data <- data_clean
# Vector of product abbreviations
products <- c("tom", "leaf", "ban", "man", "fj", "milk", "cof", "tea", "mill", "chic", "daal", "wht", "rice", "nut")
# Vector of countries
countries <- c("Brazil", "India", "UK", "Overall")
# Define a function to create the category summary for a given dataset
create_category_summary <- function(data) {
# PRODUCT-LEVEL SUMMARY
tabS5_product_summary_list <- lapply(products, function(product) {
data %>%
summarise(
org_count = sum(get(paste0(product, "_org")) == "Yes", na.rm = TRUE),
cert_count = sum(get(paste0(product, "_cert")) >= 1, na.rm = TRUE), # Certified organic products
# Organic term and certification
term_organic_count = sum(get(paste0(product, "_org_terms_Organic")) == 1, na.rm = TRUE),
term_organic_certified = sum(get(paste0(product, "_org_terms_Organic")) == 1 &
get(paste0(product, "_cert")) >= 1, na.rm = TRUE),
term_organic_certified_perc = term_organic_certified / term_organic_count,
# Natural term and certification
term_natural_count = sum(get(paste0(product, "_org_terms_Natural")) == 1, na.rm = TRUE),
term_natural_certified = sum(get(paste0(product, "_org_terms_Natural")) == 1 &
get(paste0(product, "_cert")) >= 1, na.rm = TRUE),
term_natural_certified_perc = term_natural_certified / term_natural_count,
# Chemical-free term and certification
term_chemfree_count = sum(get(paste0(product, "_org_terms_Chemical-free")) == 1, na.rm = TRUE),
term_chemfree_certified = sum(get(paste0(product, "_org_terms_Chemical-free")) == 1 &
get(paste0(product, "_cert")) >= 1, na.rm = TRUE),
term_chemfree_certified_perc = term_chemfree_certified / term_chemfree_count,
# Pesticide-free term and certification
term_pestfree_count = sum(get(paste0(product, "_org_terms_Pesticide-free")) == 1, na.rm = TRUE),
term_pestfree_certified = sum(get(paste0(product, "_org_terms_Pesticide-free")) == 1 &
get(paste0(product, "_cert")) >= 1, na.rm = TRUE),
term_pestfree_certified_perc = term_pestfree_certified / term_pestfree_count,
# Bioproducts term and certification
term_bioprod_count = sum(get(paste0(product, "_org_terms_Bioproducts")) == 1, na.rm = TRUE),
term_bioprod_certified = sum(get(paste0(product, "_org_terms_Bioproducts")) == 1 &
get(paste0(product, "_cert")) >= 1, na.rm = TRUE),
term_bioprod_certified_perc = term_bioprod_certified / term_bioprod_count,
# Bio term and certification
term_bio_count = sum(get(paste0(product, "_org_terms_Bio")) == 1, na.rm = TRUE),
term_bio_certified = sum(get(paste0(product, "_org_terms_Bio")) == 1 &
get(paste0(product, "_cert")) >= 1, na.rm = TRUE),
term_bio_certified_perc = term_bio_certified / term_bio_count,
# Eco term and certification
term_eco_count = sum(get(paste0(product, "_org_terms_Eco")) == 1, na.rm = TRUE),
term_eco_certified = sum(get(paste0(product, "_org_terms_Eco")) == 1 &
get(paste0(product, "_cert")) >= 1, na.rm = TRUE),
term_eco_certified_perc = term_eco_certified / term_eco_count,
# GMO-free term and certification
term_gmo_count = sum(get(paste0(product, "_org_terms_GMO-free")) == 1, na.rm = TRUE),
term_gmo_certified = sum(get(paste0(product, "_org_terms_GMO-free")) == 1 &
get(paste0(product, "_cert")) >= 1, na.rm = TRUE),
term_gmo_certified_perc = term_gmo_certified / term_gmo_count
) %>%
mutate(
product = product,
category = case_when(product %in% c("fj", "milk", "cof", "tea") ~ "beverages",
product %in% c("tom", "leaf", "ban", "man") ~ "fresh produce",
TRUE ~ "other")
) %>%
select(category, product, everything())
})
tabS5_product_summary <- bind_rows(tabS5_product_summary_list)
# CATEGORY-LEVEL SUMMARY
tabS5_category_summary <- tabS5_product_summary %>%
group_by(category) %>%
summarise(
cat_org_count = sum(org_count, na.rm = TRUE),
cat_cert_count = sum(cert_count, na.rm = TRUE),
cat_term_organic_count = sum(term_organic_count, na.rm = TRUE),
cat_term_organic_certified = sum(term_organic_certified, na.rm = TRUE),
cat_term_organic_certified_perc = cat_term_organic_certified / cat_term_organic_count,
cat_term_natural_count = sum(term_natural_count, na.rm = TRUE),
cat_term_natural_certified = sum(term_natural_certified, na.rm = TRUE),
cat_term_natural_certified_perc = cat_term_natural_certified / cat_term_natural_count,
cat_term_chemfree_count = sum(term_chemfree_count, na.rm = TRUE),
cat_term_chemfree_certified = sum(term_chemfree_certified, na.rm = TRUE),
cat_term_chemfree_certified_perc = cat_term_chemfree_certified / cat_term_chemfree_count,
cat_term_pestfree_count = sum(term_pestfree_count, na.rm = TRUE),
cat_term_pestfree_certified = sum(term_pestfree_certified, na.rm = TRUE),
cat_term_pestfree_certified_perc = cat_term_pestfree_certified / cat_term_pestfree_count,
cat_term_bioprod_count = sum(term_bioprod_count, na.rm = TRUE),
cat_term_bioprod_certified = sum(term_bioprod_certified, na.rm = TRUE),
cat_term_bioprod_certified_perc = cat_term_bioprod_certified / cat_term_bioprod_count,
cat_term_bio_count = sum(term_bio_count, na.rm = TRUE),
cat_term_bio_certified = sum(term_bio_certified, na.rm = TRUE),
cat_term_bio_certified_perc = cat_term_bio_certified / cat_term_bio_count,
cat_term_eco_count = sum(term_eco_count, na.rm = TRUE),
cat_term_eco_certified = sum(term_eco_certified, na.rm = TRUE),
cat_term_eco_certified_perc = cat_term_eco_certified / cat_term_eco_count,
cat_term_gmo_count = sum(term_gmo_count, na.rm = TRUE),
cat_term_gmo_certified = sum(term_gmo_certified, na.rm = TRUE),
cat_term_gmo_certified_perc = cat_term_gmo_certified / cat_term_gmo_count
)
# Calculate the totals across all categories
totals_row <- tabS5_category_summary %>%
summarise(
category = "Total",
cat_org_count = sum(cat_org_count, na.rm = TRUE),
cat_cert_count = sum(cat_cert_count, na.rm = TRUE),
cat_term_organic_count = sum(cat_term_organic_count, na.rm = TRUE),
cat_term_organic_certified = sum(cat_term_organic_certified, na.rm = TRUE),
cat_term_organic_certified_perc = cat_term_organic_certified / cat_term_organic_count,
cat_term_natural_count = sum(cat_term_natural_count, na.rm = TRUE),
cat_term_natural_certified = sum(cat_term_natural_certified, na.rm = TRUE),
cat_term_natural_certified_perc = cat_term_natural_certified / cat_term_natural_count,
cat_term_chemfree_count = sum(cat_term_chemfree_count, na.rm = TRUE),
cat_term_chemfree_certified = sum(cat_term_chemfree_certified, na.rm = TRUE),
cat_term_chemfree_certified_perc = cat_term_chemfree_certified / cat_term_chemfree_count,
cat_term_pestfree_count = sum(cat_term_pestfree_count, na.rm = TRUE),
cat_term_pestfree_certified = sum(cat_term_pestfree_certified, na.rm = TRUE),
cat_term_pestfree_certified_perc = cat_term_pestfree_certified / cat_term_pestfree_count,
cat_term_bioprod_count = sum(cat_term_bioprod_count, na.rm = TRUE),
cat_term_bioprod_certified = sum(cat_term_bioprod_certified, na.rm = TRUE),
cat_term_bioprod_certified_perc = cat_term_bioprod_certified / cat_term_bioprod_count,
cat_term_bio_count = sum(cat_term_bio_count, na.rm = TRUE),
cat_term_bio_certified = sum(cat_term_bio_certified, na.rm = TRUE),
cat_term_bio_certified_perc = cat_term_bio_certified / cat_term_bio_count,
cat_term_eco_count = sum(cat_term_eco_count, na.rm = TRUE),
cat_term_eco_certified = sum(cat_term_eco_certified, na.rm = TRUE),
cat_term_eco_certified_perc = cat_term_eco_certified / cat_term_eco_count,
cat_term_gmo_count = sum(cat_term_gmo_count, na.rm = TRUE),
cat_term_gmo_certified = sum(cat_term_gmo_certified, na.rm = TRUE),
cat_term_gmo_certified_perc = cat_term_gmo_certified / cat_term_gmo_count
)
# Append the totals row to the category summary table
tabS5_category_summary <- bind_rows(tabS5_category_summary, totals_row)
return(tabS5_category_summary)
}
# Run the function for each country and combine results into one table
results_list <- lapply(countries, function(country) {
if (country == "Overall") {
data <- tabS5_data
} else {
# Ensure filtering by country works
data <- tabS5_data %>% filter(country == !!country)
}
summary_table <- create_category_summary(data)
summary_table %>%
mutate(country = country) %>%
select(country, everything())
})
# Combine all results
tabS5_combined_summary <- bind_rows(results_list)
# Mutate to combine and clean up columns
tabS5_combined_summary <- tabS5_combined_summary %>%
mutate(
term_organic = paste0(cat_term_organic_certified, " (", round(cat_term_organic_certified_perc * 100), "%)"),
term_natural = paste0(cat_term_natural_certified, " (", round(cat_term_natural_certified_perc * 100), "%)"),
term_chemfree = paste0(cat_term_chemfree_certified, " (", round(cat_term_chemfree_certified_perc * 100), "%)"),
term_pestfree = paste0(cat_term_pestfree_certified, " (", round(cat_term_pestfree_certified_perc * 100), "%)"),
term_bioprod = paste0(cat_term_bioprod_certified, " (", round(cat_term_bioprod_certified_perc * 100), "%)"),
term_bio = paste0(cat_term_bio_certified, " (", round(cat_term_bio_certified_perc * 100), "%)"),
term_eco = paste0(cat_term_eco_certified, " (", round(cat_term_eco_certified_perc * 100), "%)"),
term_gmo = paste0(cat_term_gmo_certified, " (", round(cat_term_gmo_certified_perc * 100), "%)")
) %>%
select(country, category, cat_org_count, term_organic, term_natural,
term_chemfree, term_pestfree, term_bioprod, term_bio, term_eco, term_gmo)
# View the final combined summary table
tabS5_combined_summary
# Export to table_outputs workbook
addWorksheet(table_outputs, "Table S5")
writeData(table_outputs, sheet = "Table S5", x = tabS5_combined_summary)
saveWorkbook(table_outputs, "C:/Users/s1985751/Documents/GitHub/fea/table_outputs.xlsx", overwrite = TRUE)
# Define a function to create the term summary for a given dataset
create_term_summary <- function(data) {
terms <- c("Organic", "Natural", "Chemical-free", "Pesticide-free", "Bioproducts", "Bio", "Eco", "GMO-free")
term_summary <- lapply(terms, function(term) {
term_col <- paste0("_org_terms_", term)
certified_col <- paste0(products, "_cert")
term_data <- data %>%
summarise(
certified_with_term = sum(get(term_col) == 1 & get(certified_col) >= 1, na.rm = TRUE),
total_with_term = sum(get(term_col) == 1, na.rm = TRUE),
proportion_certified = certified_with_term / total_with_term
)
term_data <- term_data %>% mutate(term = term)
return(term_data)
})
term_summary_df <- bind_rows(term_summary)
return(term_summary_df)
}
# Apply the function to generate term-level summary for the entire dataset
term_summary_table <- create_term_summary(tabS5_data)
View(tabS5_data)
colnames(tabS5_data)
create_term_summary <- function(data) {
terms <- c("Organic", "Natural", "Chemical-free", "Pesticide-free", "Bioproducts", "Bio", "Eco", "GMO-free")
term_summary <- lapply(terms, function(term) {
certified_with_term <- 0
total_with_term <- 0
# Loop through all products to calculate totals
for (product in products) {
term_col <- paste0(product, "_org_terms_", term)
certified_col <- paste0(product, "_cert")
# Check if the columns exist
if (term_col %in% colnames(data) && certified_col %in% colnames(data)) {
certified_with_term <- certified_with_term +
sum(data[[term_col]] == 1 & data[[certified_col]] >= 1, na.rm = TRUE)
total_with_term <- total_with_term +
sum(data[[term_col]] == 1, na.rm = TRUE)
}
}
# Proportion of certified products
proportion_certified <- ifelse(total_with_term > 0, certified_with_term / total_with_term, 0)
# Return summary for the term
data.frame(
Term = term,
Certified = certified_with_term,
Total = total_with_term,
Proportion = round(proportion_certified * 100, 2)
)
})
term_summary_df <- bind_rows(term_summary)
return(term_summary_df)
}
# Apply the function to generate term-level summary for the entire dataset
term_summary_table <- create_term_summary(tabS5_data)
# View the final term summary table
term_summary_table
View(term_summary_table)
writeData(table_outputs, sheet = "Table S5", x = term_summary_table)
saveWorkbook(table_outputs, "C:/Users/s1985751/Documents/GitHub/fea/table_outputs.xlsx", overwrite = TRUE)
