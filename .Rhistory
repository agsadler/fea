setwd("~/GitHub/fea")
# Load necessary libraries
library(dplyr)
library(gmodels)
library(gt)
library(knitr)
library(kableExtra)
library(openxlsx)
library(readxl)
library(readr)
library(stats)
library(tidyr)
knitr::opts_chunk$set(echo = TRUE)
data_clean <- read.xlsx("data_clean.xlsx", sheet = "data")
# vector with brand names variables
vector_brandnames <- data_clean %>%
select(contains("brand_new")) %>%
names()
table7 <- left_join(
# number of brands in each sentinel food
data_clean %>%
select(country, vector_brandnames)
data_clean %>%
data_clean %>%
select(country, vector_brandnames) %>%
pivot_longer(cols = c(vector_brandnames),
names_to = "food",
values_to = "brand") %>%
filter(!is.na(brand)) %>%
group_by(country, food) %>%
summarise(n_brands = n())
View(data_clean)
table7 <- left_join(
# number of brands in each sentinel food
data_clean %>%
select(country, vector_brandnames) %>%
pivot_longer(cols = c(vector_brandnames),
names_to = "food",
values_to = "brand") %>%
filter(!is.na(brand)) %>%
group_by(country, food) %>%
summarise(n_brands = n()),
# top three brands for each sentinel food
data_clean %>%
select(country, vector_brandnames) %>%
pivot_longer(cols = c(vector_brandnames),
names_to = "food",
values_to = "brand") %>%
filter(!is.na(brand)) %>%
group_by(country, food) %>%
count(brand) %>%
arrange(desc(n), .by_group = TRUE) %>%
slice(1:3) %>%
mutate(rank = row_number())
) %>%
# adjust variables
mutate(food = paste(food, rank),
perc = round(n/n_brands*100,2),
brand = paste0(brand, " (", n, ", ", perc, "%)")) %>%
select(country, food, brand) %>%
# reshape table to match the analysis plan
pivot_wider(names_from = country,
values_from = brand)
kable(table7)
View(table7)
kable(table7)
table7a <- data_clean %>%
select(country, vector_brandnames) %>%
pivot_longer(cols = c(vector_brandnames),
names_to = "food",
values_to = "brand") %>%
filter(!is.na(brand)) %>%
group_by(country, food) %>%
summarise(n_brands = n())
View(table7a)
table7b <- data_clean %>%
select(country, vector_brandnames)
View(table7b)
table7c <-   data_clean %>%
select(country, vector_brandnames) %>%
pivot_longer(cols = c(vector_brandnames),
names_to = "food",
values_to = "brand") %>%
filter(!is.na(brand)) %>%
group_by(country, food)
View(table7c)
table7c <-   data_clean %>%
select(country, vector_brandnames) %>%
pivot_longer(cols = c(vector_brandnames),
names_to = "food",
values_to = "brand") %>%
filter(!is.na(brand)) %>%
group_by(country, food) %>%
count(brand)
View(table7c)
table7c <- data_clean %>%
select(country, vector_brandnames) %>%
pivot_longer(cols = c(vector_brandnames),
names_to = "food",
values_to = "brand") %>%
filter(!is.na(brand)) %>%
group_by(country, food) %>%
count(brand) %>%
arrange(desc(n), .by_group = TRUE)
View(table7c)
table7c <- data_clean %>%
select(country, vector_brandnames) %>%
pivot_longer(cols = c(vector_brandnames),
names_to = "food",
values_to = "brand") %>%
filter(!is.na(brand)) %>%
group_by(country, food) %>%
count(brand) %>%
arrange(desc(n), .by_group = TRUE) %>%
slice(1:3) %>%
mutate(rank = row_number())
View(table7c)
table7 <- left_join(
# number of brands in each sentinel food
data_clean %>%
select(country, vector_brandnames) %>%
pivot_longer(cols = c(vector_brandnames),
names_to = "food",
values_to = "brand") %>%
filter(!is.na(brand)) %>%
group_by(country, food) %>%
summarise(n_brands = n()),
# top three brands for each sentinel food
data_clean %>%
select(country, vector_brandnames) %>%
pivot_longer(cols = c(vector_brandnames),
names_to = "food",
values_to = "brand") %>%
filter(!is.na(brand)) %>%
group_by(country, food) %>%
count(brand) %>%
arrange(desc(n), .by_group = TRUE) %>%
slice(1:3) %>%
mutate(rank = row_number())
) %>%
# adjust variables
mutate(food = paste(food, rank),
perc = round(n/n_brands*100,2),
brand = paste0(brand, " (", n, ", ", perc, "%)")) %>%
select(country, food, brand)
View(table7)
table7 <- left_join(
# number of brands in each sentinel food
data_clean %>%
select(country, vector_brandnames) %>%
pivot_longer(cols = c(vector_brandnames),
names_to = "food",
values_to = "brand") %>%
filter(!is.na(brand)) %>%
group_by(country, food) %>%
summarise(n_brands = n()),
# top three brands for each sentinel food
data_clean %>%
select(country, vector_brandnames) %>%
pivot_longer(cols = c(vector_brandnames),
names_to = "food",
values_to = "brand") %>%
filter(!is.na(brand)) %>%
group_by(country, food) %>%
count(brand) %>%
arrange(desc(n), .by_group = TRUE) %>%
slice(1:3) %>%
mutate(rank = row_number())
) %>%
# adjust variables
mutate(food = paste(food, rank),
perc = round(n/n_brands*100,2),
brand = paste0(brand, " (", n, ", ", perc, "%)")) %>%
select(country, food, brand) %>%
# reshape table to match the analysis plan
pivot_wider(names_from = country,
values_from = brand)
kable(table7)
# values per country
country <- data_clean %>%
group_by(country) %>%
summarise(Certified = sum(cert_count),
Total = sum(org_foods_count)) %>%
mutate(Proportion = round(Certified/Total*100, 2)) %>%
rename()
View(country)
# values per store type
vendortype <- data_clean %>%
group_by(vendor_type)%>%
summarise(Certified = sum(cert_count),
Total = sum(org_foods_count)) %>%
mutate(Proportion = round(Certified/Total*100, 2))
View(vendortype)
products <- c("tom", "leaf", "ban", "man", "fj", "milk", "cof", "tea", "mill", "chic", "daal", "wht", "rice", "nut")
vector_organics <- paste0(products, "_org")
vector_cert <- paste0(products, "_cert")
table8a <- data_clean %>%
select(id, country, all_of(vector_cert)) %>%
pivot_longer(cols = c(vector_cert),
names_to = "food",
values_to = c("certified"))
View(table8a)
table8a <- data_clean %>%
select(id, country, all_of(vector_cert)) %>%
pivot_longer(cols = c(vector_cert),
names_to = "food",
values_to = c("certified")) %>%
group_by(food)
table8a <- data_clean %>%
+     select(id, country, all_of(vector_cert)) %>%
+     pivot_longer(cols = c(vector_cert),
+                  names_to = "food",
+                  values_to = c("certified"))
table8a <- data_clean %>%
select(id, country, all_of(vector_cert)) %>%
pivot_longer(cols = c(vector_cert),
names_to = "food",
values_to = c("certified"))
table8b <-  data_clean %>%
select(id, country, all_of(vector_cert)) %>%
pivot_longer(cols = c(vector_cert),
names_to = "food",
values_to = c("certified")) %>%
group_by(food)
View(table8b)
table8b <- data_clean %>%
select(id, country, all_of(vector_cert)) %>%
pivot_longer(cols = c(vector_cert),
names_to = "food",
values_to = c("certified")) %>%
group_by(food) %>%
summarise(Certified = sum(certified >= 1, na.rm=T))
sentinelfood <- cbind(
# count certifications
data_clean %>%
select(id, country, all_of(vector_cert)) %>%
pivot_longer(cols = c(vector_cert),
names_to = "food",
values_to = c("certified")) %>%
group_by(food) %>%
summarise(Certified = sum(certified >= 1, na.rm=T)),
# count all organics
data_clean %>%
select(id, country, all_of(vector_organics)) %>%
pivot_longer(cols = c(vector_organics),
names_to = "food",
values_to = c("total")) %>%
group_by(food) %>%
summarise(Total = sum(total == "Yes", na.rm=T)) %>%
select(-food)
) %>%
mutate(Proportion = round(Certified/Total*100, 2))
View(sentinelfood)
kable(country)
kable(vendortype)
kable(sentinelfood)
getwd()
setwd("~/GitHub/fea")
setwd("~/GitHub/fea")
